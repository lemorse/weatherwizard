#summary How to write your own search methods for the patterns

= Implementing your own way to find resources =

In shore, you can download faxes and GRIBs from the Internet.
Wherever you don't have Internet access - like at sea - the resources you are interested in to build a Composite will very likely be on your disk.
I had this exact problem during our [http://trip-2010-2011.lediouris.net 2010-2011 trip], the faxes and GRIBs were obtained through SailMail - and the SSB. Every time I wanted to visualize them in a Composite, I had to go and search the hard disk for the most recent fax of a given type, as many times as there was faxes in my Composite, and same for the GRIB... 
Bummer.
That's the kind of thing a computer is supposed to take care of.


== What we have out of the box ==

If you check out the pattern of the *SailMail* directory, you will notice in the dynamic ones that the URLs of the faxes are quite cryptic.
<br/>
You would find things like this:
{{{
  search:chartview.util.SearchUtil.findMostRecentFax(".*500.*", "${fax.path}")
}}}
You need to notice several things:
  * the prefix (protocol ?) {{{search:}}}
  * {{{ chartview.util.SearchUtil.findMostRecentFax(".*500.*", "${fax.path}") }}} that you can identify as a java method in its class, invoked with some parameters.
In the software, there is a Java class named {{{ chartview.util.SearchUtil }}}, in which lives the {{{ findMostRecentFax }}} method, that takes two *String* parameters, and returns the location - as a String - of the file containing the expected resource.
<br/>
Its signature is
    public static String findMostRecentFax(String pattern, String startPath) throws Exception


== How to implement your own needs ==

_*That is the job of a Java programmer.*_
<br/>
If you are not a Java programmer..., maybe you know one. If you don't, then you need to be nice with me, and convince me that your needs will bring some good stuff to the soft ;0) .
<br/>